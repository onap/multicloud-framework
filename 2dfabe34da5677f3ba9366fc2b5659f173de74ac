{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_ce895d76",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 287
      },
      "writtenOn": "2018-02-27T16:08:47Z",
      "side": 1,
      "message": "nice. Now I think the meaning of \"dynamic\" is clear.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_41399bd5",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-28T17:52:54Z",
      "side": 1,
      "message": "Suggest to add the following paragraph at Line 63 here, based on prior comments and agreement in comments to take reference to prior art in industry:\n\n\"\nIt should be noted that there is a prior art in OpenStack \"Gluon\" [1]_ project which provides a model-driven framework to generate APIs based on model definitions in YAML. A full, normative definition and extension mechanism of \"API Specification\" [2]_ is available in Gluon. Although our current work has limited scope, for those who are interested in full normative definition and extension mechanism in our future work, please refer to those references in \"Gluon\" [1]_ project and its \"API Specifications\" [2]_.\n\"",
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_4e954d85",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 287
      },
      "writtenOn": "2018-02-27T16:08:47Z",
      "side": 1,
      "message": "So is the following definition different from swagger?\ni.e. https://swagger.io/docs/specification/paths-and-operations/\n\nIf same, we can just include pointer.\nIf no, why? and what\u0027s the advantage of this our own definition?",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_2879d4c7",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-28T08:08:17Z",
      "side": 1,
      "message": "I am trying to follow swagger convention here. Do you mean why we need a swagger yaml here and keep the swagger json file at the same time?\n\nIf so, then the answer is MSB project will read MultiCloud\u0027s api definition by a constant url, like \"api/multicloud/v0/swagger.json\". I don\u0027t intent to change that for now.",
      "parentUuid": "5a93c517_4e954d85",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5c7ae277",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 287
      },
      "writtenOn": "2018-03-01T00:26:44Z",
      "side": 1,
      "message": "No. I understand the necessity of it.\nMy question is, is your schema suggested by below example same to swagger yaml\u0027s or not?\n\nFrom the above your comment, the answer is yes, right?\nSo please write it down explicitly(e.g. the schema of swagger yaml is adapted and its schema definition can be found at this url)\nOtherwise, with only the below example, I couldn\u0027t figure out,\nyou adapted swagger yaml schema definition or you (re-)invented your own schema definition or you started from swagger yaml schema, but twisted it.\nWhat is your intention?\n\n\nthe section of \"swagger file generation\" implies it. but not explicit.\n\n\nTo implement this proposal, formal schema definition is required to validate if the given yaml file for API definition is valid or not.",
      "parentUuid": "5a93c517_2879d4c7",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 34
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c154cb00",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-28T17:52:54Z",
      "side": 1,
      "message": "It would also be good to add Testing part, i.e. how to test those newly generated APIs, CSIT etc.",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 208,
        "endChar": 14
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3c959686",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 287
      },
      "writtenOn": "2018-03-01T00:26:44Z",
      "side": 1,
      "message": "Are there any OSS tools available?",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 214,
        "endChar": 46
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1c98dabe",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 287
      },
      "writtenOn": "2018-03-01T00:26:44Z",
      "side": 1,
      "message": "Isn\u0027t there any OSS tools for this?",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 217,
        "endChar": 30
      },
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_a14f3f6a",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-28T17:52:54Z",
      "side": 1,
      "message": "Suggest to add the reference section at the end:\n\n\"\nReferences\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n.. [1] https://wiki.openstack.org/wiki/Gluon\n.. [2] https://github.com/openstack/gluon/blob/master/doc/source/devref/gluon_api_spec.inc\n\"",
      "revId": "2dfabe34da5677f3ba9366fc2b5659f173de74ac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}