{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_e78a6e1a",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "\u0027The current ONAP\u0027 or just \u0027Currently ONAP\u0027",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 19
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_73014837",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "\u0027other COE\u0027s (Container Orchestration Engines) are\u0027",
      "range": {
        "startLine": 42,
        "startChar": 3,
        "endLine": 42,
        "endChar": 15
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0790ba48",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "\u0027Integration Scenario\u0027",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 20
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5ce9b9e4",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "https://github.com/onap/multicloud-framework/blob/master/docs/MultiCloud-Deployment-Guide.rst\nAs this guide, should we specify more information of registering Kubernetes cluster into AAI?\n(example: AAI url, esr-system-info)",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 92,
        "endChar": 47
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bcaebd96",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "kubeconfig file is hard to manage many Kubernetes cluster. I prefer basic authentication (username, password) and bearer token here.",
      "range": {
        "startLine": 97,
        "startChar": 33,
        "endLine": 97,
        "endChar": 48
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_877b6a27",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "Beijing",
      "range": {
        "startLine": 101,
        "startChar": 61,
        "endLine": 101,
        "endChar": 68
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_2774d634",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "\u0027http/https\u0027 ?",
      "range": {
        "startLine": 110,
        "startChar": 23,
        "endLine": 110,
        "endChar": 27
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7ce6f516",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "I prefer this way, but rather than using kubectl, IMO we should use Kubernetes client (https://github.com/kubernetes-client/python)",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 15
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c79c1260",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "temporary",
      "range": {
        "startLine": 138,
        "startChar": 25,
        "endLine": 138,
        "endChar": 35
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_27ab7676",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "use of acronym can looks cryptic, using at least once \u0027SO (Service Orchestrator)\u0027  in this doc would be helpful",
      "range": {
        "startLine": 139,
        "startChar": 28,
        "endLine": 139,
        "endChar": 30
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1cefb1ea",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "I see that ONAP community is starting to design VNF template, I also suggest we have a Kubernetes node like VDU. In this way, containerized VNF can work well with NS.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_07be7ab4",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "SO can directly to talk to multicloud ?",
      "range": {
        "startLine": 251,
        "startChar": 38,
        "endLine": 252,
        "endChar": 21
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c7b3b2e7",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "sorry for weird question it may be my lack of knowledge, \n ARIA adaptor has capability to bypass directly to multicloud or this should be multicloud plugin or adaptor ?",
      "range": {
        "startLine": 259,
        "startChar": 14,
        "endLine": 261,
        "endChar": 34
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_67cc1e6b",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 290,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "handles",
      "range": {
        "startLine": 290,
        "startChar": 13,
        "endLine": 290,
        "endChar": 19
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bcb79df4",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "This is my opinion about a definition of a containerized VNF. In Kubernetes, Pod is a smallest object, of course, we can use Pod as a VNF. But in this case, we have to do all things. Kubernetes provides Deployment and StatefulSets to maintain the number of Pods. Other thing is Service, it acts as a Load Balancer to Pods and some other things like ConfigMap, Horizontal Pod Autoscaler and Persistent volume. IMO, a containerized VNF should be defined by some Kubernetes objects above and expose VNF to outside by Service (Loadblancer type).\n\nExample: because a Pod doesn\u0027t have a real IP, we can expose a containerized DNS VNF to the world by IP: 1.2.3.4 using Service.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 291,
        "endChar": 26
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5cd0d91e",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "https://msb.onap.org:80/api/multicloud-kubernetes/v0/clusters/\u003ccloud-id\u003e/proxy/api/v1/namespaces/{namespace}/service/\u003cservice id\u003e\n\nIn this example, we can abstract a containerized VNF by Serivce id. Deployment, Service, Horizontal Pod Autoscaler, etc. can have the same Serivce id (name). We can manage all these object by this name.",
      "range": {
        "startLine": 294,
        "startChar": 9,
        "endLine": 294,
        "endChar": 131
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_87c92a5b",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 326,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "was it intended to add a reference ? whether it is this spec document or some reference document for more details ?",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 326,
        "endChar": 13
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_47bfa2aa",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 386,
      "author": {
        "id": 3141
      },
      "writtenOn": "2018-02-09T18:21:27Z",
      "side": 1,
      "message": "instantiation",
      "range": {
        "startLine": 386,
        "startChar": 65,
        "endLine": 386,
        "endChar": 78
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3cc38d58",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 439,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "Could virtual link and connection point supported here?",
      "range": {
        "startLine": 438,
        "startChar": 0,
        "endLine": 439,
        "endChar": 35
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7ccd9584",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "nit: more than Deployment, we should translate to Service, Horizontal Pod Autoscaler (for autoscaling policies), etc. templates too",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 20
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}