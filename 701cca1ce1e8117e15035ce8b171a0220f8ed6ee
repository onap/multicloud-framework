{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_5ce9b9e4",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "https://github.com/onap/multicloud-framework/blob/master/docs/MultiCloud-Deployment-Guide.rst\nAs this guide, should we specify more information of registering Kubernetes cluster into AAI?\n(example: AAI url, esr-system-info)",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 92,
        "endChar": 47
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bcaebd96",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "kubeconfig file is hard to manage many Kubernetes cluster. I prefer basic authentication (username, password) and bearer token here.",
      "range": {
        "startLine": 97,
        "startChar": 33,
        "endLine": 97,
        "endChar": 48
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7ce6f516",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "I prefer this way, but rather than using kubectl, IMO we should use Kubernetes client (https://github.com/kubernetes-client/python)",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 15
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1cefb1ea",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "I see that ONAP community is starting to design VNF template, I also suggest we have a Kubernetes node like VDU. In this way, containerized VNF can work well with NS.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_bcb79df4",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "This is my opinion about a definition of a containerized VNF. In Kubernetes, Pod is a smallest object, of course, we can use Pod as a VNF. But in this case, we have to do all things. Kubernetes provides Deployment and StatefulSets to maintain the number of Pods. Other thing is Service, it acts as a Load Balancer to Pods and some other things like ConfigMap, Horizontal Pod Autoscaler and Persistent volume. IMO, a containerized VNF should be defined by some Kubernetes objects above and expose VNF to outside by Service (Loadblancer type).\n\nExample: because a Pod doesn\u0027t have a real IP, we can expose a containerized DNS VNF to the world by IP: 1.2.3.4 using Service.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 291,
        "endChar": 26
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_5cd0d91e",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "https://msb.onap.org:80/api/multicloud-kubernetes/v0/clusters/\u003ccloud-id\u003e/proxy/api/v1/namespaces/{namespace}/service/\u003cservice id\u003e\n\nIn this example, we can abstract a containerized VNF by Serivce id. Deployment, Service, Horizontal Pod Autoscaler, etc. can have the same Serivce id (name). We can manage all these object by this name.",
      "range": {
        "startLine": 294,
        "startChar": 9,
        "endLine": 294,
        "endChar": 131
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3cc38d58",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 439,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "Could virtual link and connection point supported here?",
      "range": {
        "startLine": 438,
        "startChar": 0,
        "endLine": 439,
        "endChar": 35
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7ccd9584",
        "filename": "docs/specs/multicloud-container-plugin.rst",
        "patchSetId": 3
      },
      "lineNbr": 457,
      "author": {
        "id": 2913
      },
      "writtenOn": "2018-02-09T12:40:19Z",
      "side": 1,
      "message": "nit: more than Deployment, we should translate to Service, Horizontal Pod Autoscaler (for autoscaling policies), etc. templates too",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 20
      },
      "revId": "701cca1ce1e8117e15035ce8b171a0220f8ed6ee",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}