{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_4a4a5dc6",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1889
      },
      "writtenOn": "2018-02-02T09:46:15Z",
      "side": 1,
      "message": "This is very fancy feature , I am supportive for this feature as long as it can co-exist/co-work with existing implementing practices .\nSo my questions: 1, is this a tool to generate python source codes so that developers could modify/customize them?\n2, is that possible to add other NBI/SBI translation codes and exposing them without putting them into the YAML?\nthanks",
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_30a664c2",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T01:42:17Z",
      "side": 1,
      "message": "For the questions:\n\n1. It is not a tool to generate python code. It is  a set of python code that read YAML file and act according to it.\n2. This spec will only consider definition in YAML files.",
      "parentUuid": "5a93c517_4a4a5dc6",
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_504a10c6",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "It is a very good start of this work. Thank you for moving it forward. Just a few observations and comments:\n\n1. Regarding \"act according to it\", which actions do you have in mind after the code reads YAML?\n\n2. Can you expand the full definition of YAML file as you mentioned above? I admit that myself, as a normal person, won\u0027t be able to write an YAML yet after reading this document in its current format.\n\n3. The same type of work (or a prior art) has already been done in OpenStack Gluon project. There is a well defined and very mature specification in https://github.com/openstack/gluon/blob/master/doc/source/devref/gluon_api_spec.inc.",
      "parentUuid": "5a93c517_30a664c2",
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_b55ed974",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1889
      },
      "writtenOn": "2018-02-08T02:51:01Z",
      "side": 1,
      "message": "Ok, it sounds like a runtime framework which will consume YAML and expose service to consumers. Another question is: will this runtime framework allow to hook extensions written in python (or some other languages) to the logic defined in YAML? On the other hand, does the developers have to compose all logic by the \"language\"/model specified by this YAML? Thanks",
      "parentUuid": "5a93c517_30a664c2",
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_ed8fb528",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-08T08:07:40Z",
      "side": 1,
      "message": "Sorry, I don\u0027t get your point \"hook extensions\", can you give an example. For the other question, yes, developers have to do that.",
      "parentUuid": "5a93c517_b55ed974",
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7045ccb1",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "I might be wrong, but I wouldn\u0027t expect the APIs are explicitly defined in YAML.\n\nPlease refer to:\n\n(1) https://wiki.onap.org/display/DW/RESTful+API+Design+Specification provides a good guidance of how the resources would look like, and the APIs are those CRUD actions over those resources.\n\n(2) The same type of work (or a prior art) has already been done in OpenStack Gluon project. There is a well defined and very mature specification in https://github.com/openstack/gluon/blob/master/doc/source/devref/gluon_api_spec.inc.",
      "range": {
        "startLine": 25,
        "startChar": 57,
        "endLine": 26,
        "endChar": 40
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_50821095",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "(1) I don\u0027t see a conflict between the guide and this spec. The guide said that we should not use url definition like this:\n\n /api/petstore/v1/pets/getalldogs\n\n /api/petstore/v1/pets/createdog\n\n /api/petstore/v1/pets/deletedog\n\nIn the spec, I just define supported http methods, the url will not change. And I am using the swagger rule here. So that it will be easier to covert to swagger file latter.\n\n\n(2) I have checked the gluon spec, there are many good point to take reference.",
      "parentUuid": "5a93c517_7045ccb1",
      "range": {
        "startLine": 25,
        "startChar": 57,
        "endLine": 26,
        "endChar": 40
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e124acb0",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "A good practice is to list all references explicitly.\n\nOthers, please see my later response below.",
      "parentUuid": "5a93c517_50821095",
      "range": {
        "startLine": 25,
        "startChar": 57,
        "endLine": 26,
        "endChar": 40
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1014889e",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "I think we are mixing HTTP methods with YAML resources here. Please refer to https://wiki.onap.org/display/DW/RESTful+API+Design+Specification for a good explanation of resources and RESTful APIs using HTTP.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 61,
        "endChar": 24
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_707dccb0",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "see above answer",
      "parentUuid": "5a93c517_1014889e",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 61,
        "endChar": 24
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_301744a5",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "Can you give an explicit example of those \"`parameters` are the variables in the URL\"?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_d045c070",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "in this example, it will be vimid, tenantid and hostid. Application can use these parameters to get extra information.",
      "parentUuid": "5a93c517_301744a5",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_16c1e0e3",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "Do you mean, for example:\n\nhttp://.../host?vimid\u003did1\u0026tenantid\u003did2\u0026host\u003did3?\n\n(parameters are the variables in URL)",
      "parentUuid": "5a93c517_d045c070",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_ad852d08",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-08T08:07:40Z",
      "side": 1,
      "message": "No, actually, it is something like this:\n\nhttp://.../{vimid}/{tenantid}/hosts/{hostid}\n\nThis is what the current multi-cloud api looks like.",
      "parentUuid": "5a93c517_16c1e0e3",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 79
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_d00dc091",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "Those are standard methods of using HTTP-based RESTful APIs to handle those resources. It is redundant here because it is off the focus of this document as mentioned at the beginning and clarified in comments: \"This spec will only consider definition in YAML files.\"",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 83,
        "endChar": 28
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_b05a744e",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "But we are not support all the http method for all url, right? In the example, only \u0027get\u0027 is supported.",
      "parentUuid": "5a93c517_d00dc091",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 83,
        "endChar": 28
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_f6647423",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "I think we do. From RESTful perspective, all CRUD operations are expected for the resources. If one creates a resource, one should be able to delete, update and get resources. That\u0027s the entire lifecycle operations of a resource expected by a tenant.\n\nThat\u0027s why I commented previously that we shouldn\u0027t duplicate those CRUD operation, or HTTP method in this spec. Because we are compliant with RESTful convention, we may only need to add RESTful convention in the reference.",
      "parentUuid": "5a93c517_b05a744e",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 83,
        "endChar": 28
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8d97113a",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-08T08:07:40Z",
      "side": 1,
      "message": "But the current multi-cloud doesn\u0027t support CRUD for all resources. Take the /hosts as example, only get method is support. So we need to explicitly specify the supported HTTP method here. We don\u0027t want to change how the api may looks, in this spec.",
      "parentUuid": "5a93c517_f6647423",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 83,
        "endChar": 28
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_b02274ff",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "Those are actually examples. Can we have a full, normative definition?",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_7054ec20",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "actually, the \u0027host\u0027 in this spec is a normative definition. It might be extended in future, but for now, it is full( unless you tell me something is missing :) )",
      "parentUuid": "5a93c517_b02274ff",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_f619d488",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "That is my biggest concern.\n\nHere the work item is \"Elastic API Exposure\", the previous sections \"Problem Description\" and \"Proposed Change\" all lead to making a normal reader think it is a general framework for extending APIs.\n\nIn the \"Definition of API\" part, \"host\" is used as an example.\n\nPerhaps \"host\" itself may be a normative definition for now. But what is the normative definition of the framework?\n\nFor example, when I write a YAML, what is the root object that covers every branch, where \"host\" belongs to one of the branches?\n\nIf we want to extend the \"host\" definition, how should I specify the backward compatibility?\n\nLet alone there are many other resources than \"host\", and what is the structure to aggregate them in a normative format in YAML that supports both extensibility and backward compatibility?",
      "parentUuid": "5a93c517_7054ec20",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_edbd75b8",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-08T08:07:40Z",
      "side": 1,
      "message": "I guess I understand your point here. What I try to accomplish here is much simpler approach. The restful resources are all \"flat\" resources. I don\u0027t intent to design a sophisticating model definition here. I guess the current resources of multi-cloud are \"flat\", I don\u0027t see much relationship between them.  For the extensibility and backward compatibility concern, developer can define different YAML file for that.\n\nThis spec just want to do one thing, that is provide a new way to expose APIs so that we don\u0027t need to use static code to maintain them.",
      "parentUuid": "5a93c517_f619d488",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_d084e0d5",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "Certainly, the full, normative and machine-parsable definition of YAML is missing. Without this full, normative definition, how can a parser parse, validate and take actions accordingly?\n\nI guess we don\u0027t want to hardcode any tool, do we?",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 170,
        "endChar": 10
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_f03f9cd4",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "There is no intention to hardcode anything. Could you elaborate what is \"full normative definition\". I believe the example in this spec is enough for api \"/hosts\". I don\u0027t plan to add all the content of YAML in the spec.",
      "parentUuid": "5a93c517_d084e0d5",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 170,
        "endChar": 10
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_01019804",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "See above, especially \"host\" is one resource. The \"full normative definition\" is the one overall structure that aggregates all resources in a format that is extensible and backward compatible.\n\nFor example, you may consider \"host\" as a \"function\" in one of the source code file in programming, and the \"full normative definition\" is the whole source code package.",
      "parentUuid": "5a93c517_f03f9cd4",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 170,
        "endChar": 10
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_701cecc1",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "Shouldn\u0027t Plugins call southbound VIM APIs?",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 46
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_b02114b6",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "Yes, this workitem is to use a restclient in plugin to call VIM api. because we are using openstack-sdk for now. But we can\u0027t use openstack-sdk in this spec, because openstack-sdk\u0027s method name has no relationship with url.",
      "parentUuid": "5a93c517_701cecc1",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 46
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_a10f842d",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "Will API handler call all VIM APIs directly? i.e. call Azure API, call AWS APIs, call OpenStack APIs etc. without going through Plugins?\n\nI thought that once API handler identifies which VIM the operation should go, it would call relevant Plugin, give the control to Plugin and let the Plugin to handle it call the specific VIM APIs.",
      "parentUuid": "5a93c517_b02114b6",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 46
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_4dcca96a",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-08T08:07:40Z",
      "side": 1,
      "message": "If the change is made in framework, then yes, call will be forwarded to plugin. If the change is made to plugin, then the plugin needs to interact with VIM.",
      "parentUuid": "5a93c517_a10f842d",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 174,
        "endChar": 46
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_307e64e5",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T06:22:08Z",
      "side": 1,
      "message": "Shouldn\u0027t YAML Parser validate the conformance?",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_702b8c94",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-05T07:35:39Z",
      "side": 1,
      "message": "YAML parser is what I intend to build in this spec. So, yes, validator is port of the YAML parser. I don\u0027t get your point here.",
      "parentUuid": "5a93c517_307e64e5",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_212b7483",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 845
      },
      "writtenOn": "2018-02-05T20:47:12Z",
      "side": 1,
      "message": "My point here is: if validator is part of YAML parser, shouldn\u0027t they be the same/one work item?",
      "parentUuid": "5a93c517_702b8c94",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_0dc22134",
        "filename": "docs/specs/elastic_api_exposure.rst",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1205
      },
      "writtenOn": "2018-02-08T08:07:40Z",
      "side": 1,
      "message": "Yes, it could be. I thought, maybe I could get all the data first, for example, get the \"minimal\" data first in YAML parser, and validate the value in this work item.",
      "parentUuid": "5a93c517_212b7483",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 30
      },
      "revId": "0e7b7837100c808e270c16adfb1828602637b0df",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}